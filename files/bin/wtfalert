#!/usr/bin/env python3
# -*- Mode: Python; tab-width: 2; indent-tabs-mode: nil -*-

import sys
import os.path
import mwtfalertable
from optparse import OptionParser

def main():
  usage = "usage: %prog [options]"
  parser = OptionParser(usage)
  parser.add_option("-d", "--debug", action="count", dest="debug", default=0, help='increment debug level')
  parser.add_option("-D", "--store", action="store", dest="store", help='specify writable directory where to store data')
  parser.add_option("-l", "--logfile", action="store", dest="logfile", help='specify logfile to use')
  parser.add_option("-s", "--script", action="store", dest="caller", default='wtfalert', help='specify caller name (defaults to wtfalert)')
  parser.add_option("-S", "--show", action="store_true", dest="show", default=False, help='show contents of the alerts storage')
  parser.add_option("-t", "--test", action="store_true", dest="test", default=False, help='sets test flag')
  parser.add_option("-v", "--verbose", action="count", dest="verbose", default=0, help='increment verbosity level')
  parser.add_option("-V", "--version", action="store_true", dest="version", default=False, help='show version and exit')

  (opts, args) = parser.parse_args()

  options = vars(opts)
  if options['debug']>1:
    print (options)
    print (args)

  if options['version']:
    basenm = os.path.basename(sys.argv[0])
    print('%s Version: 1.0.0' % basenm)
    exit(0)

  gettrace = getattr(sys, 'gettrace', None)

  if gettrace is not None and gettrace():
      print('Hmm, Big Debugger is watching me')
      options['test'] = True

  exit_code = 0
  alerter = mwtfalertable.Alerter(options)
  if options['test']:
    #  args {
    #     key      => 'unique alert key', # required
    #     subject  => 'subject',          # optional
    #     message  => 'message',          # optional
    #     filename => 'pathname',         # optional read file into message
    #  }
    alrt = { 'key': 'wtf.test.alert'  }
    alerter.raise_alert(alrt)
  else:
    alerter.dump()

  exit(exit_code)

if __name__ == "__main__":
    main()
