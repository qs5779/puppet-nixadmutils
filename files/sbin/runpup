#!/bin/bash
# -*- Mode: Bash; tab-width: 2; indent-tabs-mode: nil -*- vim:sta:et:sw=2:ts=2:syntax=sh
#
# Revision History:
# 20160825 - quiensabe - initial version
# 20160901 - quiensabe - capture stderr in tee
# 20161005 - quiensabe - ensure puppet path
#

SCRIPT=$(basename "$0")
VERSION='Revision: 2.0.0'
VERBOSE=0
OPTIONS='--test'
ERRORS=0
SERVER=''

function usage {
  cat << EOM
usage: $SCRIPT [-d] [-e env] [-g] [-h] [-n] [-S server] [-v] [-V]
  where:
    -d specify debug mode
    -e specify alternate environment
    -g specify --graph
    -h show this message and exit
    -n specify dry-run/noop mode
    -S specify alternate server
    -v add verbosity
    -V show version and exit
EOM
  exit 1
}

function add_option {
  typeset O="$1"

  # the -- in next expression means end of command options
  # so any hyphens in expression won't be mistaked as options
  if ! echo "$OPTIONS" | grep -q -- "$O"
  then
    if [ -n "$OPTIONS" ]
    then
      OPTIONS="$OPTIONS $O"
    else
      OPTIONS="$O"
    fi
  fi
}

while getopts ":de:ghnS:vVw" opt
do
  case "$opt" in
    d )
      add_option "--debug"
      ((VERBOSE+=1))
    ;;
    e )
      add_option "--environment=${OPTARG}"
    ;;
    g )
      add_option "--graph"
    ;;
    h )
      usage
    ;;
    n )
      add_option "--noop"
    ;;
    S )
      SERVER="$OPTARG"
    ;;
    w )
      add_option "--waitforcert=60"
    ;;
    v ) ((VERBOSE+=1)) ;;
    V )
      echo "$SCRIPT VERSION: $(echo $VERSION | awk '{ print $2 }')"
      exit 0
    ;;
    * )
      echo "Unexpected option \"$opt\""
      usage
    ;;
  esac
done
shift $((OPTIND - 1))

PUPPET=/opt/puppetlabs/bin/puppet
if [ ! -x "$PUPPET" ]
then
  PUPPET=/usr/bin/puppet
  if [ ! -x "$PUPPET" ]
  then
    echo "Failed to find the puppet binary!!!" >&2
    exit 1
  fi
  ETCPUP=/etc/puppet
else
  ETCPUP=/etc/puppetlabs
fi

# ALT server run
# sudo puppet agent -t \
#   --server=puppet.dev.example.com \
#   --confdir=/etc/puppetlabs/puppet-dev # Runs against dev puppet server

if [ -n "$SERVER" ]
then
  # get all to left of first dot
  ALD=$(echo $SERVER | awk -F. '{print $1}')
  CFGDIR=${ETCPUP}/puppet-${ALD}

  if [ ! -d "$CFGDIR" ]
  then
    mkdir -q "${CFGDIR}/ssl"
    chown puppet:puppet "${CFGDIR}/ssl"
    for f in auth.conf hiera.yaml puppet.conf
    do
      cp "${ETCPUP}/puppet/${f}" "$CFGDIR"
    done
  fi

  OPTIONS="$OPTIONS --server=${SERVER} --confdir=${CFGDIR}"
fi

#puppet agent --test 2>&1 | tee ${HOME}/agent.out
COMMAND="sudo $PUPPET agent $OPTIONS"
echo "$SCRIPT: $VERSION"
echo "executing: $COMMAND"
$COMMAND > >(tee ${HOME}/agent.out) 2> >(tee ${HOME}/agent.err >&2)
RC=$?
echo "stdout saved in  ${HOME}/agent.out"

if [ $RC -ne 0 ]
then
  echo "the puppet agent run exited with $RC"
fi

if [ -s ${HOME}/agent.err ]
then
  cat ${HOME}/agent.err
fi

exit $RC
