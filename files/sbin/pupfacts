#!/bin/bash
# vim:sta:et:sw=2:ts=2:syntax=sh
#
# Revision History:
#  20181128 - richarjt - module virtual machines don't have an environmnet
#

OUTNM='facts-puppet.json'
OUTDIR='/var/log'
QUIET=0

function usage {
  cat << EOF
    usage: $(basename "$0") [-h] [-d outdir] [-o outname] [-q]

      outdir  defaults to /var/log
      outname defaults to facts-puppet.json

      the file will be saved at <outdir>/<outname>

      -q runs quietly
EOF
  exit 1
}

while getopts ":hd:o:q" opt
do
  case "$opt" in
    d )
      OUTDIR="$OPTARG"
    ;;
    h )
      usage
    ;;
    o )
      OUTNM="$OPTARG"
    ;;
    q )
      QUIET=1
    ;;
    * )
      echo "Unexpected option \"$opt\""
      usage
    ;;
  esac
done
shift $((OPTIND - 1))

IAM=$(whoami)

if [ "$IAM" != "root" ]
then
  SUDO=sudo
else
  SUDO=''
fi

if $SUDO test -f /root/flags/stopped.puppet
then
  exit 0
fi

EPARAM=''

if [ ! -t 1 ]
then
  QUIET=1
fi

function speak {
  if [ $QUIET -eq 0 ]
  then
    echo "$1"
  fi
}

CFG=/etc/puppetlabs/puppet/puppet.conf
if [ ! -f "$CFG" ]
then
  CFG=/etc/puppet/puppet.conf
  if [ ! -f "$CFG" ]
  then
    echo "Failed to find the puppet config file!!!" >&2
    exit 1
  fi
  speak "Using puppet config: $CFG"
fi

PUPPET=$(which puppet_wrapper 2> /dev/null)
[[ -x "$PUPPET" ]] || exit 1

tmpfile=$(/bin/mktemp /tmp/facts.XXXXXXXXX) || exit 1
tmperrs=$(/bin/mktemp /tmp/facterrs.XXXXXXXXX) || exit 1
# shellcheck disable=SC2086
$SUDO $PUPPET facts $EPARAM 2> "$tmperrs" > "$tmpfile"

if [ -z "$OUTDIR" ]
then
  OUTDIR=.
elif [ ! -d "$OUTDIR" ]
then
  $SUDO mkdir -p "$OUTDIR"
fi

if [ -n "$OUTNM"  ]
then
  OUTFILE="${OUTDIR}/${OUTNM}"
else
  OUTFILE=""
fi

if [ -n "$OUTFILE" ]
then
  $SUDO rm -f /var/log/puppet_facts.json # the old default name
  $SUDO cp -f "$tmpfile" "$OUTFILE"
  $SUDO chgrp adm "$OUTFILE"
  $SUDO chmod g+r "$OUTFILE"
fi

if [ $QUIET -eq 0 ]
then
  cat "$tmpfile"
  if [ -n "$OUTFILE" ]
  then
    echo "facts listed in: $OUTFILE"
  fi
fi

if [ -s "$tmperrs" ]
then
  grep -v autoload "$tmperrs" > "$tmpfile"
  if [ -s "$tmpfile" ]
  then
    cat "$tmpfile"
  fi
fi

rm -f "$tmperrs" "$tmpfile"

exit 0
