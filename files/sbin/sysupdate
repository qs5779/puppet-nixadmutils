#!/bin/bash
# vim:sta:et:sw=2:ts=2:syntax=sh
#
# Revision History:
# 20180526 - que - initial version
# 20190806 - que - gentoo support
# 20190817 - que - arch support
# 20191022 - que - pacman-mirrors optional
# 20191030 - que - use --preserve-env for proxy when sudo
# 20210101 - que - shellcheck corrections
#

SCRIPT=$(basename "$0")
VERSION=1.0.0
VERBOSE=0
DEBUG=0
ERRORS=0

function usage {
  cat << EOM
usage: $SCRIPT [-d] [-h] [-v] [-V]
  where:
    -d specify debug mode
    -h show this message and exit
    -v add verbosity
    -V show version and exit
EOM
  exit 1
}

while getopts ":dhvV" opt
do
  case "$opt" in
    d )
      ((DEBUG+=1))
      ((VERBOSE+=1))
    ;;
    h )
      usage
    ;;
    v ) ((VERBOSE+=1)) ;;
    V )
      echo "$SCRIPT VERSION: $VERSION"
      exit 0
    ;;
    * )
      echo "Unexpected option \"$opt\""
      usage
    ;;
  esac
done
shift $((OPTIND - 1))

# shellcheck source=/dev/null
[[ -f /etc/sysupdaterc ]] && . /etc/sysupdaterc
# shellcheck source=/dev/null
[[ -f "${HOME}/.sysupdaterc" ]] && . "${HOME}/.sysupdaterc"

if [ "$(whoami)" != "root" ]
then
  PREFIX='sudo --preserve-env' #=http_proxy,ftp_proxy'
else
  PREFIX=''
fi

TICKER=/tmp/${SCRIPT}.ticker
FAM=$(facter osfamily)
#MDR=$(facter operatingsystemmajrelease)

function check_ticker {
  RC=1
  if $PREFIX test -f "$TICKER"
  then
    LAST=$($PREFIX date -r "$TICKER" '+%s')
    NOW=$(date '+%s')
    ELAPSED=$((NOW-LAST))
    if [ $ELAPSED -lt 86400 ]
    then
      RC=0
    fi
  fi
  return $RC
}

case "$FAM" in
  Arch* )
    if [ -x /usr/bin/pacman-mirrors ]
    then
      if ! check_ticker
      then
        $PREFIX pacman-mirrors -f 5
        $PREFIX touch "$TICKER"
      fi
    fi
    $PREFIX pacman -Syu
    NEW=$(pacman -Q linux | cut -d " " -f 2 | tr '-' '.')
    OLD=$(uname -r | tr '-' '.' | sed -re 's/\.(MANJARO|ARCH)$//')
    if [[ "$NEW" != "$OLD" ]]
    then
      echo "new kernel: $NEW"
      echo "cur kernel: $OLD"
      echo 'reboot required'
    fi
  ;;
  Debian )
    $PREFIX apt update
    $PREFIX apt upgrade
    if [ -f /var/run/reboot-required ]; then
      echo 'reboot required'
    elif [ -r /etc/os-release ]
    then
      # shellcheck source=/dev/null
      . /etc/os-release
      case "$ID" in
        raspbian )
          if command -v reboot-needed.sh >/dev/null 2>&1
          then
            reboot-needed.sh
          fi
        ;;
        * )
        ;;
      esac
    fi
  ;;
  RedHat )
    MDR=$(facter operatingsystemmajrelease)
    if [ "$MDR" -gt 7 ]
    then
      $PREFIX dnf --refresh upgrade
    else
      $PREFIX yum update
    fi
    $PREFIX needs-restarting
    RC=$?
    echo "needs-retarting exited with: $RC"
  ;;
  Gentoo )
    if ! check_ticker
    then
      $PREFIX rm -f /root/last.emerge.sync # remove old ticker if needed
      $PREFIX emerge --sync
      $PREFIX touch "$TICKER"
    fi
    $PREFIX emerge -avuDN --with-bdeps y --keep-going world
    # $PREFIX etc-update # or dispatch-conf
    # $PREFIX emerge -av --depclean
    # $PREFIX revdep-rebuild
    # $PREFIX eclean -d distfiles
  ;;
  * )
    echo "Unsupported osfamily: $FAM" >&2
    ((ERRORS+=1))
  ;;
esac

exit "$ERRORS"
