#!/bin/bash
# -*- Mode: Bash; tab-width: 2; indent-tabs-mode: nil -*- vim:sta:et:sw=2:ts=2:syntax=sh
#
# Revision History:
# 20190317 - que - initial version
# 20190806 - que - gentoo support
#

SCRIPT=$(basename "$0")

PARAM_1="$1"
PARAM_2="$2"

function abend {
  typeset M="$1"
  echo "$1" >&2
  exit 1
}

IAM=$(whoami)

if [ "$IAM" != "root" ]
then
  abend "You must be root ( or sudo ) to run $SCRIPT"
fi

. '/etc/os-release' || abend "Failed to source /etc/os-release"

if [ -z "$ID_LIKE" ]
then
  if [ -z "$ID" ]
  then
    abend "Failed to determine os ID or ID_LIKE!!!"
  fi
  case "$ID" in
    fedora )
      ID_LIKE=redhat
    ;;
    gentoo )
      ID_LIKE=gentoo
    ;;
    * )
      abend "Unrecognized ID from /etc/os-relase: $ID"
    ;;
  esac
fi

function refresh_package_lists {
  typeset FLAG=/var/tmp/packages.refreshed.by.${$IAM}
  typeset LAST NOW ELAPSED
  if [ -e "$FLAG" ]
  then
    LAST=$(date -r "$FLAG" '+%S')
    NOW=$(date '+%S')
    ELAPSED=$((NOW-LAST))
  else
    ELAPSED=86400*14
  fi
  if [ $ELAPSED -gt 86400 ]
  then
    touch "$FLAG"
    # refresh the package list
    case "$ID_LIKE" in
      arch )
        case "$ID" in
          manjaro )
            LAST=$((86400*14))
            if [ $ELAPSED -ge $MAX ]
              sudo pacman-mirrors -c United_States
            fi
          ;;
          * )
          ;;
        esac
      ;;
      debian )
        sudo apt-update
      ;;
      gentoo )
        sudo emerge-websync
      ;;
      * )
      ;;
    esac
  fi
}

function foo_pacwrap {
  abend "Use a supported symlink to call this script!!"
}

function foo_findpkg {
  [ -n "$PARAM_1" ] || abend "usage: $SCRIPT package_to_find"

  case "$ID_LIKE" in
    debian )
      sudo apt search --names-only "$PARAM_1"
    ;;
    redhat )
      sudo dnf search "$PARAM_1"
    ;;
    gentoo )
      refresh_package_lists
      sudo eix -S "$PARAM_1"
    ;;
    arch )
      refresh_package_lists
      sudo pacman -Ssy "$PARAM_1"
    ;;
    * )
      abend "Unsupported ID_LIKE: $ID_LIKE"
    ;;
  esac
}

function foo_listpkgs {
  tmpfile=$(mktemp /tmp/pkgs.XXXXXXXX) || exit 1

  FAM=$(facter osfamily)

  case "$ID_LIKE" in
    debian )
      apt list --installed | sort > "$tmpfile"
      oldfile='/var/log/aptpkgs'
    ;;
    redhat )
      oldfile='/var/log/rpmpkgs'
      rpm -qa --qf '%{name}-%{version}-%{release}.%{arch}.rpm\n' 2>&1 | sort > "$tmpfile"
    ;;
    gentoo )
      qlist -Iv > "$tmpfile"
      oldfile='/var/log/gtpkgs'
    ;;
    arch )
      pacman -Qe > "$tmpfile"
      oldfile='/var/log/archpkgs'
    ;;
    * )
      rm -rf "$tmpfile"
      abend "Unsupported ID_LIKE: $ID_LIKE"
    ;;
  esac

  outfile=/var/log/pkglist

  if [ -w "$outfile" ]
  then
    writable=1
    diff -q "$tmpfile" "$outfile" > /dev/null
    differs=$?
  elif [ -w "$(dirname "$outfile")" ]
  then
    writable=1
    differs=1
  else
    writable=0
    differs=0
  fi

  if [ $writable -ne 0 -a $differs -eq 1 ]
  then
    if [ -f "$oldfile" ]
    then
      rm -f "$oldfile" 2>/dev/null
    fi
    cat "$tmpfile" > "$outfile"
  # else
  #   echo "writable: $writable"
  #   echo "differs:  $differs"
  fi

  if [ -t 0 ]
  then
    cat "$tmpfile"
  fi

  rm -rf "$tmpfile"
}

function foo_installpkg {
  [ -n "$PARAM_1" ] || abend "usage: $SCRIPT package_to_find"

  case "$ID_LIKE" in
    debian )
      sudo apt install "$PARAM"
    ;;
    redhat )
      sudo dnf install "$PARAM"
    ;;
    gentoo )
      refresh_package_lists
      sudo emerge --ask "$PARAM"
    ;;
    arch )
      refresh_package_lists
      sudo pacman -Sy "$PARAM"
    ;;
    * )
      abend "Unsupported ID_LIKE: $ID_LIKE"
    ;;
  esac
}

function foo_installpkg {
  [ -n "$PARAM_1" ] || abend "usage: $SCRIPT package_to_find"

  case "$ID_LIKE" in
    debian )
      sudo apt install "$PARAM"
    ;;
    redhat )
      sudo dnf install "$PARAM"
    ;;
    gentoo )
      refresh_package_lists
      sudo emerge --ask "$PARAM"
    ;;
    arch )
      refresh_package_lists
      sudo pacman -Sy "$PARAM"
    ;;
    * )
      abend "Unsupported ID_LIKE: $ID_LIKE"
    ;;
  esac
}

case "$SCRIPT" in
  pkglist )
    action=listpkgs
  ;;
  * )
    action=$SCRIPT
  ;;
esac

foo_${action}

exit 0
