#!/bin/bash
# -*- Mode: Bash; tab-width: 2; indent-tabs-mode: nil -*- vim:sta:et:sw=2:ts=2:syntax=sh
# Revision History:
# 20180811 - que - initial version
#

SCRIPT=$(basename "$0")
VERSION='$Revision: 1.0.0 $' # will be replaced by svn commit # if using subversion with Revision keywords on
VERBOSE=0
DEBUG=0
ERRORS=0
LINES=10

function usage {
  cat << EOM
usage: $SCRIPT [-d] [-h] [-l] [-v] [-V]
  where:
    -d       - specify debug mode
    -h       - show this message and exit
    -n lines - number of lines to show (default 10)
    -v       - add verbosity
    -V       - show version and exit
EOM
  exit 1
}

while getopts ":dhn:vV" opt
do
  case "$opt" in
    d )
      ((DEBUG+=1))
      ((VERBOSE+=1))
    ;;
    h )
      usage
    ;;
    n ) LINES=$OPTARG ;;
    v ) ((VERBOSE+=1)) ;;
    V )
      echo "$SCRIPT VERSION: $(echo $VERSION | awk '{ print $2 }')"
      exit 0
    ;;
    * )
      echo "Unexpected option \"$opt\""
      usage
    ;;
  esac
done
shift $((OPTIND - 1))

if [ "$(whoami)" = "root" ]
then
  SUDO=''
else
  SUDO=sudo
fi

VIRT=$(facter virtual)

case "$(facter osfamily)" in
  Archlinux )
    if [ "$VIRT" != "physical" ]
    then
      MATCH=/usr/bin/puppet
    else
      MATCH="-u puppet.service"
    fi
  ;;
  * )
    if [ "$VIRT" = "virtualbox" ]
    then
      MATCH=/opt/puppetlabs/bin/puppet
    else
      MATCH="-u puppet.service"
    fi
  ;;
esac

$SUDO journalctl -l $MATCH | tail -n $LINES

exit $ERRORS
